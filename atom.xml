<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>NoRain</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-07-30T08:19:31.268Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>NoRain</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>4.PMP进度管理</title>
    <link href="http://yoursite.com/2020/07/30/4-PMP%E8%BF%9B%E5%BA%A6%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2020/07/30/4-PMP%E8%BF%9B%E5%BA%A6%E7%AE%A1%E7%90%86/</id>
    <published>2020-07-30T07:58:37.000Z</published>
    <updated>2020-07-30T08:19:31.268Z</updated>
    
    <content type="html"><![CDATA[<h1 id="进度管理"><a href="#进度管理" class="headerlink" title="进度管理"></a>进度管理</h1><a id="more"></a><pre><code>1. 定义    确定如何估算、预算、管理、监督和控制项目成本的过程。</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;进度管理&quot;&gt;&lt;a href=&quot;#进度管理&quot; class=&quot;headerlink&quot; title=&quot;进度管理&quot;&gt;&lt;/a&gt;进度管理&lt;/h1&gt;
    
    </summary>
    
    
    
      <category term="PMP" scheme="http://yoursite.com/tags/PMP/"/>
    
  </entry>
  
  <entry>
    <title>1.PMP整合管理</title>
    <link href="http://yoursite.com/2020/07/30/1-PMP%E6%95%B4%E5%90%88%E7%AE%A1%E7%90%86/"/>
    <id>http://yoursite.com/2020/07/30/1-PMP%E6%95%B4%E5%90%88%E7%AE%A1%E7%90%86/</id>
    <published>2020-07-30T07:57:40.000Z</published>
    <updated>2020-07-30T08:19:32.416Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
      <category term="PMP" scheme="http://yoursite.com/tags/PMP/"/>
    
  </entry>
  
  <entry>
    <title>&#39; docker操作 &#39;</title>
    <link href="http://yoursite.com/2020/06/05/%E5%B8%B8%E7%94%A8%E7%9A%84docker%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2020/06/05/%E5%B8%B8%E7%94%A8%E7%9A%84docker%E5%91%BD%E4%BB%A4/</id>
    <published>2020-06-05T02:07:20.000Z</published>
    <updated>2020-07-30T08:16:33.198Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ol><li>简介</li><li>docker命令</li><li>使用docker制作asp.net core程序镜像</li></ol><a id="more"></a><h1 id="简介之废话连篇"><a href="#简介之废话连篇" class="headerlink" title="简介之废话连篇"></a>简介之废话连篇</h1><ul><li>大家好，近来整天忙着开发，今天突然想把电脑上的mysql、以及一些服务都想移植到docker里面去。当我下载完docker并启动时，尴尬就来了，我把docker命令给忘光了。闲来没事，今天写篇文章记录下docker的使用。</li></ul><h1 id="docker命令"><a href="#docker命令" class="headerlink" title="docker命令"></a>docker命令</h1><h2 id="镜像操作"><a href="#镜像操作" class="headerlink" title="镜像操作"></a>镜像操作</h2><h4 id="1-镜像查看"><a href="#1-镜像查看" class="headerlink" title="1. 镜像查看"></a>1. 镜像查看</h4><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker images       <span class="comment"># 列出本地images</span></span><br><span class="line"></span><br><span class="line">docker images -a    <span class="comment"># 列出本地images，含中间映像层</span></span><br><span class="line"></span><br><span class="line">docker images -q    <span class="comment"># 只显示镜像ID</span></span><br><span class="line"></span><br><span class="line">docker images -qa   <span class="comment"># 显示镜像ID，含中间映像层</span></span><br><span class="line"></span><br><span class="line">docker images --digests         <span class="comment"># 显示镜像摘要信息(DIGEST列)</span></span><br><span class="line"></span><br><span class="line">docker images --no-trunc        <span class="comment"># 显示镜像完整信息</span></span><br><span class="line"></span><br><span class="line">docker history -H redis         <span class="comment"># 显示指定镜像的历史创建；参数：-H 镜像大小和日期，默认为true；--no-trunc  显示完整的提交记录；-q  仅列出提交记录ID。redis：镜像名</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-镜像搜索"><a href="#2-镜像搜索" class="headerlink" title="2. 镜像搜索"></a>2. 镜像搜索</h4><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 镜像搜索</span></span><br><span class="line">docker search mysql                             <span class="comment"># 搜索仓库MySQL镜像</span></span><br><span class="line"></span><br><span class="line">docker search --filter=stars=<span class="number">600</span> mysql          <span class="comment">#  --filter=stars=600：只显示 starts&gt;=600 的镜像</span></span><br><span class="line"></span><br><span class="line">docker search --no-trunc mysql                  <span class="comment">#  --no-trunc 显示镜像完整 DESCRIPTION 描述</span></span><br><span class="line"></span><br><span class="line">docker search  --automated mysql                <span class="comment">#  --automated ：只列出 AUTOMATED=OK 的镜像</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-镜像下载"><a href="#3-镜像下载" class="headerlink" title="3. 镜像下载"></a>3. 镜像下载</h4><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker pull redis               <span class="comment"># 下载Redis官方最新镜像，相当于：docker pull redis:latest</span></span><br><span class="line"></span><br><span class="line">docker pull -a redis            <span class="comment"># 下载仓库所有Redis镜像</span></span><br><span class="line"></span><br><span class="line">docker pull bitnami/redis       <span class="comment"># 下载私人仓库镜像</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-镜像删除"><a href="#4-镜像删除" class="headerlink" title="4. 镜像删除"></a>4. 镜像删除</h4><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker rmi redis                    <span class="comment"># 单个镜像删除，相当于：docker rmi redis:latest</span></span><br><span class="line"></span><br><span class="line">docker rmi -f redis                 <span class="comment"># 强制删除(针对基于镜像有运行的容器进程)</span></span><br><span class="line"></span><br><span class="line">docker rmi -f redis tomcat nginx        <span class="comment"># 多个镜像删除，不同镜像间以空格间隔</span></span><br><span class="line"></span><br><span class="line">docker rmi -f $(docker images -q)       <span class="comment"># 删除本地全部镜像</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="5-镜像构建"><a href="#5-镜像构建" class="headerlink" title="5. 镜像构建"></a>5. 镜像构建</h4><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker build -f docker文件名（默认Dockerfile） -t  名称：标记（name:tags）</span><br><span class="line"></span><br></pre></td></tr></table></figure><br/><h2 id="容器操作"><a href="#容器操作" class="headerlink" title="容器操作"></a>容器操作</h2><h4 id="1-容器运行"><a href="#1-容器运行" class="headerlink" title="1. 容器运行"></a>1. 容器运行</h4><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker <span class="keyword">run</span><span class="bash"> -i -t --name mycentos        <span class="comment"># 新建并启动容器，参数：-i  以交互模式运行容器；-t  为容器重新分配一个伪输入终端；--name  为容器指定一个名称</span></span></span><br><span class="line"></span><br><span class="line">docker <span class="keyword">run</span><span class="bash"> -d mycentos                  <span class="comment"># 后台启动容器，参数：-d  已守护方式启动容器</span></span></span><br><span class="line"></span><br><span class="line">docker start redis                      <span class="comment"># 启动一个或多个已经被停止的容器</span></span><br><span class="line"></span><br><span class="line">docker restart redis                    <span class="comment"># 重启容器</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="2-容器进程"><a href="#2-容器进程" class="headerlink" title="2. 容器进程"></a>2. 容器进程</h4><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker top redis            <span class="comment"># 列出redis容器中运行进程。 top支持 ps 命令参数，格式：docker top [OPTIONS] CONTAINER [ps OPTIONS]</span></span><br><span class="line"></span><br><span class="line">for i in  `docker ps |grep Up|awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>`;do echo \ &amp;&amp;docker top $i; done     <span class="comment"># 查看所有运行容器的进程信息</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="3-容器日志"><a href="#3-容器日志" class="headerlink" title="3. 容器日志"></a>3. 容器日志</h4><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">docker logs rabbitmq            <span class="comment"># 查看redis容器日志，默认参数</span></span><br><span class="line"></span><br><span class="line">docker logs -f -t --tail=<span class="number">20</span> redis       <span class="comment"># 查看redis容器日志，参数：-f  跟踪日志输出；-t   显示时间戳；--tail  仅列出最新N条容器日志；</span></span><br><span class="line"></span><br><span class="line">docker logs --since=<span class="string">&quot;2019-05-21&quot;</span> --tail=<span class="number">10</span> redis        <span class="comment"># 查看容器redis从2019年05月21日后的最新10条日志。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-容器的进入与退出"><a href="#4-容器的进入与退出" class="headerlink" title="4. 容器的进入与退出"></a>4. 容器的进入与退出</h4><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker <span class="keyword">run</span><span class="bash"> -it centos /bin/bash             <span class="comment"># 使用run方式在创建时进入</span></span></span><br><span class="line"></span><br><span class="line">exit                                        <span class="comment"># 关闭容器并退出        </span></span><br><span class="line"></span><br><span class="line">快捷键：Ctrl + P + Q                    <span class="comment"># ##仅退出容器，不关闭</span></span><br><span class="line"></span><br><span class="line">docker attach --sig-proxy=false centos              <span class="comment"># 直接进入centos 容器启动命令的终端，不会启动新进程，多个attach连接共享容器屏幕，参数：--sig-proxy=false  确保CTRL-D或CTRL-C不会关闭容器</span></span><br><span class="line"></span><br><span class="line">docker exec -i -t  centos /bin/bash                 <span class="comment"># 在 centos 容器中打开新的交互模式终端，可以启动新进程，参数：-i  即使没有附加也保持STDIN 打开；-t  分配一个伪终端</span></span><br><span class="line"></span><br><span class="line">docker exec -i -t centos ls -l /tmp                 <span class="comment"># 以交互模式在容器中执行命令，结果返回到当前终端屏幕</span></span><br><span class="line"></span><br><span class="line">docker exec -d centos  touch cache.txt              <span class="comment"># 以分离模式在容器中执行命令，程序后台运行，结果不会反馈到当前终端</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="5-查看容器"><a href="#5-查看容器" class="headerlink" title="5. 查看容器"></a>5. 查看容器</h4><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker ps               <span class="comment"># 查看正在运行的容器</span></span><br><span class="line"></span><br><span class="line">docker ps -q            <span class="comment"># 查看正在运行的容器的ID</span></span><br><span class="line"></span><br><span class="line">docker ps -a            <span class="comment"># 查看正在运行+历史运行过的容器</span></span><br><span class="line"></span><br><span class="line">docker ps -s            <span class="comment"># 显示运行容器总文件大小</span></span><br><span class="line"></span><br><span class="line">docker ps -l            <span class="comment">##显示最近创建容器</span></span><br><span class="line"></span><br><span class="line">docker ps -n <span class="number">3</span>          <span class="comment">##显示最近创建的3个容器</span></span><br><span class="line"></span><br><span class="line">docker ps --no-trunc        <span class="comment">##不截断输出</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker inspect redis            <span class="comment">##获取镜像redis的元信息</span></span><br><span class="line"></span><br><span class="line">docker inspect --format=<span class="string">&#x27;&#123;&#123;range .NetworkSettings.Networks&#125;&#125;&#123;&#123;.IPAddress&#125;&#125;&#123;&#123;end&#125;&#125;&#x27;</span> redis        <span class="comment">##获取正在运行的容器redis的 IP</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="6-容器的停止与删除"><a href="#6-容器的停止与删除" class="headerlink" title="6. 容器的停止与删除"></a>6. 容器的停止与删除</h4><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker stop redis           <span class="comment">##停止一个运行中的容器</span></span><br><span class="line"></span><br><span class="line">docker kill redis           <span class="comment">##杀掉一个运行中的容器</span></span><br><span class="line"></span><br><span class="line">docker rm redis             <span class="comment">##删除一个已停止的容器</span></span><br><span class="line"></span><br><span class="line">docker rm -f redis          <span class="comment">##删除一个运行中的容器</span></span><br><span class="line"></span><br><span class="line">docker rm -f $(docker ps -a -q)             <span class="comment">##删除多个容器</span></span><br><span class="line">docker ps -a -q | xargs docker rm</span><br><span class="line"></span><br><span class="line">docker rm -l db                     <span class="comment">## -l 移除容器间的网络连接，连接名为 db</span></span><br><span class="line"></span><br><span class="line">docker rm -v redis                  <span class="comment">## -v 删除容器，并删除容器挂载的数据卷</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="7-生成镜像"><a href="#7-生成镜像" class="headerlink" title="7. 生成镜像"></a>7. 生成镜像</h4><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##基于当前redis容器创建一个新的镜像；参数：-a 提交的镜像作者；-c 使用Dockerfile指令来创建镜像；-m :提交时的说明文字；-p :在commit时，将容器暂停</span></span><br><span class="line">docker commit -a=<span class="string">&quot;DeepInThought&quot;</span> -m=<span class="string">&quot;my redis&quot;</span> [redis容器ID]  myredis:v1.<span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="8-容器与主机间的数据拷贝"><a href="#8-容器与主机间的数据拷贝" class="headerlink" title="8. 容器与主机间的数据拷贝"></a>8. 容器与主机间的数据拷贝</h4><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker cp rabbitmq:/[container_path] [local_path]           <span class="comment">##将rabbitmq容器中的文件copy至本地路径</span></span><br><span class="line"></span><br><span class="line">docker cp [local_path] rabbitmq:/[container_path]/          <span class="comment">##将主机文件copy至rabbitmq容器</span></span><br><span class="line"></span><br><span class="line">docker cp [local_path] rabbitmq:/[container_path]           <span class="comment">##将主机文件copy至rabbitmq容器，目录重命名为[container_path]（注意与非重命名copy的区别）</span></span><br></pre></td></tr></table></figure><h1 id="使用docker制作镜像"><a href="#使用docker制作镜像" class="headerlink" title="使用docker制作镜像"></a>使用docker制作镜像</h1><ol><li>首先先创建一个asp.net core api项目，然后在在目录下面建一个名为：Dockerfile的文件</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;简介&lt;/li&gt;
&lt;li&gt;docker命令&lt;/li&gt;
&lt;li&gt;使用docker制作asp.net core程序镜像&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>使用git命令同步git</title>
    <link href="http://yoursite.com/2020/04/17/%E4%BD%BF%E7%94%A8git%E5%91%BD%E4%BB%A4%E5%90%8C%E6%AD%A5git/"/>
    <id>http://yoursite.com/2020/04/17/%E4%BD%BF%E7%94%A8git%E5%91%BD%E4%BB%A4%E5%90%8C%E6%AD%A5git/</id>
    <published>2020-04-17T01:45:13.000Z</published>
    <updated>2020-07-30T08:19:56.257Z</updated>
    
    <content type="html"><![CDATA[<h1 id="记录下使用git命令clon存储库进行开发"><a href="#记录下使用git命令clon存储库进行开发" class="headerlink" title="记录下使用git命令clon存储库进行开发"></a>记录下使用git命令clon存储库进行开发</h1><a id="more"></a><ul><li>首先先拿到git的ssh地址</li><li>命令行进入项目根目录文件夹，执行  git init 创建git文件结构（隐藏的.git文件夹。.git文件夹保存着历史版本信息以及git服务器的配置信息，删除之后就是一个干净的普通文件夹了）。</li><li>执行 git pull   git路径 把初始结构下载到本地（服务器端至少要有一个文件，否则pull的时候会报错fatal: Couldn’t find remote ref HEAD）</li><li>执行 git add . （注意最后的.）把修改提交到本地缓存</li><li>执行 git commit -m ‘提交的注释信息’ 提交到本地库</li><li>执行 git remote add origin git路径 把本地库设置同步到远程服务器</li><li>执行 git push –set-upstream git路径 master 设定默认上传地址，并且进行第一次同步到服务器</li></ul><h1 id="日常开发使用"><a href="#日常开发使用" class="headerlink" title="日常开发使用"></a>日常开发使用</h1><h2 id="本地代码修改后，执行如下的指令："><a href="#本地代码修改后，执行如下的指令：" class="headerlink" title="本地代码修改后，执行如下的指令："></a>本地代码修改后，执行如下的指令：</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git add –A                  <span class="comment">#把本地所有的修改提交到缓存</span></span><br><span class="line">git commit –m <span class="string">&#x27;修改描述&#x27;</span>    <span class="comment">#把修改提交到本地</span></span><br><span class="line">git push                    <span class="comment">#把修改推送到服务器</span></span><br></pre></td></tr></table></figure><h2 id="获取服务器端的修改：git-pull3、add的不同参数："><a href="#获取服务器端的修改：git-pull3、add的不同参数：" class="headerlink" title="获取服务器端的修改：git pull3、add的不同参数："></a>获取服务器端的修改：git pull3、add的不同参数：</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">git add <span class="literal">-A</span>      <span class="comment">#提交所有变化</span></span><br><span class="line">git add <span class="literal">-u</span>      <span class="comment">#提交被修改(modified)和被删除(deleted)文件，不包括新文件(new)</span></span><br><span class="line">git add .       <span class="comment">#提交新文件(new)和被修改(modified)文件，不包括被删除(deleted)文件</span></span><br></pre></td></tr></table></figure><h1 id="Git分支操作"><a href="#Git分支操作" class="headerlink" title="Git分支操作"></a>Git分支操作</h1><ol><li>查看远程分支:git branch -a</li><li>查看本地分支:git branch</li><li>切换分支:git checkout -b v0.9rc1 origin/v0.9rc1</li><li>合并分支：git merge <branch> #带上一个你想合并进来的一个分支名称。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;记录下使用git命令clon存储库进行开发&quot;&gt;&lt;a href=&quot;#记录下使用git命令clon存储库进行开发&quot; class=&quot;headerlink&quot; title=&quot;记录下使用git命令clon存储库进行开发&quot;&gt;&lt;/a&gt;记录下使用git命令clon存储库进行开发&lt;/h1&gt;
    
    </summary>
    
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>HT for web 编辑器使用https</title>
    <link href="http://yoursite.com/2020/03/31/HT%E4%BD%BF%E7%94%A8https/"/>
    <id>http://yoursite.com/2020/03/31/HT%E4%BD%BF%E7%94%A8https/</id>
    <published>2020-03-31T09:53:51.000Z</published>
    <updated>2020-04-01T02:15:57.284Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><ul><li>由于公司事情诸多，前段时间领导交给我个任务研究HT编辑器，经过一通改造，终于要拿出手了，当部署完使用https地址访问的时候，就出问题了。先记录下这个问题解决方案，毕竟ht的资料太少了。<h2 id="HT-for-web部署之后通过https访问的问题"><a href="#HT-for-web部署之后通过https访问的问题" class="headerlink" title="HT for web部署之后通过https访问的问题"></a>HT for web部署之后通过https访问的问题</h2></li><li>因为使用https，HT里面的ws连接自动变成了wss。导致有一个websocket连接失败</li></ul><a id="more"></a><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ol><li><strong>修改server目录下的config.ini配置文件</strong><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">enableHttps = true </span><br><span class="line">sslKey = E:\hightopo\projects\key\key.pem     #这个是密钥文件</span><br><span class="line">sslCert = E:\hightopo\projects\key\file.crt   #这个是证书</span><br></pre></td></tr></table></figure></li></ol><ul><li><red>sslKey 文件经过测试，我是用key结尾的文件也可以使用</red></li></ul><ol start="2"><li><strong>密钥文件和证书文件生成方法：</strong><ul><li>下载openssl（我这边是使用windows版本的openssl）<ul><li>下载地址:<a href="http://gnuwin32.sourceforge.net/packages/openssl.htm">http://gnuwin32.sourceforge.net/packages/openssl.htm</a></li></ul></li><li>运行openssl,输入以下两个命令  <figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//生成密钥</span></span><br><span class="line">req -new -newkey rsa:2048 -nodes -out mydomain.csr -keyout private.key</span><br><span class="line"><span class="comment">//生成证书</span></span><br><span class="line">x509 -req -days 365 -in mydomain.csr -signkey private.key -out mydomain.crt</span><br></pre></td></tr></table></figure></li><li>运行完成之后，会在opensll的bin目录下生成三个文件,我们只需要其中的crt和key文件，照着上面的解决方法配置下就行了<br>  mydomain.csr<br>  mydomain.crt<br>  private.key</li></ul></li></ol><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p><img src="/images/2020-4-1.png" alt="配置图"></p><p><img src="/images/202041ht.png" alt="运行结果"></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简述&quot;&gt;&lt;a href=&quot;#简述&quot; class=&quot;headerlink&quot; title=&quot;简述&quot;&gt;&lt;/a&gt;简述&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;由于公司事情诸多，前段时间领导交给我个任务研究HT编辑器，经过一通改造，终于要拿出手了，当部署完使用https地址访问的时候，就出问题了。先记录下这个问题解决方案，毕竟ht的资料太少了。&lt;h2 id=&quot;HT-for-web部署之后通过https访问的问题&quot;&gt;&lt;a href=&quot;#HT-for-web部署之后通过https访问的问题&quot; class=&quot;headerlink&quot; title=&quot;HT for web部署之后通过https访问的问题&quot;&gt;&lt;/a&gt;HT for web部署之后通过https访问的问题&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;因为使用https，HT里面的ws连接自动变成了wss。导致有一个websocket连接失败&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
    
      <category term="HT" scheme="http://yoursite.com/tags/HT/"/>
    
  </entry>
  
  <entry>
    <title>HT编辑器的改造(有时间在写这篇文章)</title>
    <link href="http://yoursite.com/2020/01/11/HT%E7%BC%96%E8%BE%91%E5%99%A8%E7%9A%84%E6%94%B9%E9%80%A0%E4%B9%8B%E8%B7%AF/"/>
    <id>http://yoursite.com/2020/01/11/HT%E7%BC%96%E8%BE%91%E5%99%A8%E7%9A%84%E6%94%B9%E9%80%A0%E4%B9%8B%E8%B7%AF/</id>
    <published>2020-01-11T01:23:19.000Z</published>
    <updated>2020-04-01T02:15:40.645Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li>HT 是一个前端的js库，可以用它来快速实现2D、网络拓扑图、机架图、网络通信图、3D网络图的构建。HT编辑器是基于HT来实现的</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;HT 是一个前端的js库，可以用它来快速实现2D、网络拓扑图、机架图、网络通信图、3D网络图的构建。HT编辑器是基于HT来实现的
      
    
    </summary>
    
    
    
      <category term="HT" scheme="http://yoursite.com/tags/HT/"/>
    
  </entry>
  
  <entry>
    <title>IdentityServer4的最佳使用</title>
    <link href="http://yoursite.com/2019/09/22/IdentityServer4%E7%9A%84%E6%9C%80%E4%BD%B3%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2019/09/22/IdentityServer4%E7%9A%84%E6%9C%80%E4%BD%B3%E4%BD%BF%E7%94%A8/</id>
    <published>2019-09-22T04:49:45.000Z</published>
    <updated>2020-07-30T08:20:40.603Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>&emsp;&emsp;本人做微服务项目也有一段时间了，在微服务中让我感触颇深的就是这个IdentityServer4了，ID4（IdentityServer4的简称）中涉及的概念颇多，本文不谈概念（我怕读者没耐心看下去），在这分享下我个人的使用心得。</p><a id="more"></a><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p>&emsp;&emsp;1. ID4简介</p><p>&emsp;&emsp;2. ID4使用</p><h3 id="ID4简介"><a href="#ID4简介" class="headerlink" title="ID4简介"></a>ID4简介</h3><p>&emsp;&emsp;相信大家都知道面向对象中的封装（把通用的功能封装起来，减少程序中大量重复代码），我们知道在一个单体系统中有很多的重复模块，例如：身份认证、权限控制检查等，在单体系统中，这些都可以使用aop统一在一个地方控制。而在分布式系统，每个系统都需要进行身份认证、权限检查等。这时，每个系统都得写一套同样的代码来进行这些控制，我们能不能像单体系统那样在一个地方进行这些流程呢？<strong>这时我们可以使用IdentityServer4来实现。</strong></p><p>&emsp;&emsp;IdentityServer4是一个集成 <strong>身份认证和授权</strong> 的组件，使用OpenId Connect（身份识别框架） 和 Auth2.0（授权框架）来进行身份认证和授权的。</p><h3 id="ID4使用"><a href="#ID4使用" class="headerlink" title="ID4使用"></a>ID4使用</h3><blockquote><h3 id="我这里只列出几个主要的类，其它，可以下载项目来看。关于如何使用，代码有点多，我比较懒，就没怎么讲解，感兴趣的小伙伴可以加个QQ-1983702356-来讨论下。"><a href="#我这里只列出几个主要的类，其它，可以下载项目来看。关于如何使用，代码有点多，我比较懒，就没怎么讲解，感兴趣的小伙伴可以加个QQ-1983702356-来讨论下。" class="headerlink" title="我这里只列出几个主要的类，其它，可以下载项目来看。关于如何使用，代码有点多，我比较懒，就没怎么讲解，感兴趣的小伙伴可以加个QQ:1983702356 来讨论下。"></a>我这里只列出几个主要的类，其它，可以下载项目来看。<span style="color:red;">关于如何使用，代码有点多，我比较懒，就没怎么讲解，感兴趣的小伙伴可以加个QQ:1983702356 来讨论下。</span></h3></blockquote><ul><li><p><strong>项目地址：</strong> <a href="https://github.com/MapleWithoutWords/IdentityServer4Demo">https://github.com/MapleWithoutWords/IdentityServer4Demo</a><br>（<span style="color:red;">注意：下载项目后，记得把数据库链接字符串改下</span>）</p></li><li><p>项目环境：</p><ol><li>.net core 2.2</li><li>IdentityServer 2.5</li><li>Mysql 8</li></ol></li><li><p>项目结构：<br><img src="/images/20190922143616.png" alt="项目结构"></p></li></ul><h4 id="WebApplication1-（IdentityServer4）项目，安装-Install-Package-IdentityServer4-Version-2-5-0，"><a href="#WebApplication1-（IdentityServer4）项目，安装-Install-Package-IdentityServer4-Version-2-5-0，" class="headerlink" title="WebApplication1 （IdentityServer4）项目，安装 Install-Package IdentityServer4 -Version 2.5.0，"></a>WebApplication1 （IdentityServer4）项目，安装 <strong>Install-Package IdentityServer4 -Version 2.5.0</strong>，</h4><ol><li><p>以下几个类比较关键</p><ol><li><p>Config.cs。<strong>主要是获取身份资源</strong></p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Config</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IEnumerable&lt;IdentityResource&gt; <span class="title">GetIdentityResources</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> List&lt;IdentityResource&gt;</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">new</span> IdentityResources.OpenId(), <span class="comment">//必须要添加，否则报无效的 scope 错误</span></span><br><span class="line">        <span class="keyword">new</span> IdentityResources.Profile(),</span><br><span class="line">        <span class="keyword">new</span> IdentityResources.Email()</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>TestClientStore.cs  <strong>加载IdentityServer4的client</strong></p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 加载IdentityServer4的client</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TestClientStore</span> : <span class="title">IClientStore</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> Service层中的一个接口</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> IClientService ClientSvc &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TestClientStore</span>(<span class="params">IClientService ClientSvc</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">this</span>.ClientSvc = ClientSvc;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task&lt;Client&gt; <span class="title">FindClientByIdAsync</span>(<span class="params"><span class="keyword">string</span> clientId</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">var</span> dto = <span class="keyword">await</span> ClientSvc.FindClientByIdAsync(clientId);</span><br><span class="line">        <span class="keyword">if</span> (dto==<span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> scopes = dto.APIResources.Select(e =&gt; e.Name).ToList();</span><br><span class="line">        scopes.Add(IdentityServerConstants.StandardScopes.OpenId);</span><br><span class="line">        scopes.Add(IdentityServerConstants.StandardScopes.Profile);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Client</span><br><span class="line">        &#123;</span><br><span class="line">            ClientId = dto.Client.Id,<span class="comment">//API账号、客户端Id</span></span><br><span class="line">            AllowedGrantTypes = GrantTypes.ResourceOwnerPassword,</span><br><span class="line">            ClientSecrets =</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">new</span> Secret(dto.Client.Secret.Sha256())<span class="comment">//秘钥</span></span><br><span class="line">            &#125;,</span><br><span class="line">            AllowedScopes = scopes<span class="comment">//这个账号支持访问哪些应用</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol></li></ol><pre><code>3. TestReourceStore.cs，**加载IdentityServer的APIResource**    &lt;!--hexoPostRenderEscape:&lt;figure class=&quot;highlight c#&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&lt;span class=&quot;doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;doctag&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&lt;span class=&quot;doctag&quot;&gt;///&lt;/span&gt; 加载IdentityServer的APIResource&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&lt;span class=&quot;doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;doctag&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TestReourceStore&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;IResourceStore&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; IApiResourceService resourceSvc &amp;#123; &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;; &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TestReourceStore&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;IApiResourceService resourceSvc&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.resourceSvc = resourceSvc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; Task&amp;lt;ApiResource&amp;gt; &lt;span class=&quot;title&quot;&gt;FindApiResourceAsync&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; name&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; entity = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; resourceSvc.GetByNameAsync(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ApiResource(entity.Name,entity.DisplayName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; Task&amp;lt;IEnumerable&amp;lt;ApiResource&amp;gt;&amp;gt; FindApiResourcesByScopeAsync(IEnumerable&amp;lt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;&amp;gt; scopeNames)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; list = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; resourceSvc.GetDatasByNamesAsync(scopeNames);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; list.Select(e=&amp;gt;&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ApiResource(e.Name,e.DisplayName));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; Task&amp;lt;IEnumerable&amp;lt;IdentityResource&amp;gt;&amp;gt; FindIdentityResourcesByScopeAsync(IEnumerable&amp;lt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;&amp;gt; scopeNames)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; Config.GetIdentityResources().Where(e =&amp;gt; scopeNames.Contains(e.Name)).ToList();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; Task&amp;lt;Resources&amp;gt; &lt;span class=&quot;title&quot;&gt;GetAllResourcesAsync&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; list = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; resourceSvc.GetNoramlAll();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; resouces = list.Select(e =&amp;gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ApiResource(e.Name, e.DisplayName)).ToList();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Resources&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ApiResources = resouces&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;:hexoPostRenderEscape--&gt;4. TestResourceOwnerPasswordValidator.cs，**IdentityServer4登录验证**    &lt;!--hexoPostRenderEscape:&lt;figure class=&quot;highlight c#&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&lt;span class=&quot;doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;doctag&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&lt;span class=&quot;doctag&quot;&gt;///&lt;/span&gt; IdentityServer4登录验证&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&lt;span class=&quot;doctag&quot;&gt;///&lt;/span&gt; &lt;span class=&quot;doctag&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TestResourceOwnerPasswordValidator&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;IResourceOwnerPasswordValidator&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; IUserService UserSvc &amp;#123; &lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;; &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;TestResourceOwnerPasswordValidator&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;IUserService UserSvc&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.UserSvc = UserSvc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; Task &lt;span class=&quot;title&quot;&gt;ValidateAsync&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;ResourceOwnerPasswordValidationContext context&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; account = context.UserName;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; pwd = context.Password;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; loginResult = &lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; UserSvc.Login(account, pwd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (loginResult == &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            context.Result = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; GrantValidationResult(TokenRequestErrors.InvalidGrant, &lt;span class=&quot;string&quot;&gt;&amp;quot;invalid custom credential&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        context.Result = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; GrantValidationResult(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                subject: context.UserName,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                authenticationMethod: &lt;span class=&quot;string&quot;&gt;&amp;quot;custom&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                claims: &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Claim[] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Claim(&lt;span class=&quot;string&quot;&gt;&amp;quot;Name&amp;quot;&lt;/span&gt;,context.UserName),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Claim(&lt;span class=&quot;string&quot;&gt;&amp;quot;UserId&amp;quot;&lt;/span&gt;,loginResult.Id),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Claim(&lt;span class=&quot;string&quot;&gt;&amp;quot;Roles&amp;quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;quot;Admin,Contact&amp;quot;&lt;/span&gt;),    &lt;span class=&quot;comment&quot;&gt;//模拟获取登录用户的角色信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Claim(&lt;span class=&quot;string&quot;&gt;&amp;quot;Premissions&amp;quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&amp;quot;List,Delete&amp;quot;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;//模拟获取登录用户的权限信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;:hexoPostRenderEscape--&gt;5. ProfileService.cs，**用户信息**    &lt;!--hexoPostRenderEscape:&lt;figure class=&quot;highlight c#&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ProfileService&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;IProfileService&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; Task &lt;span class=&quot;title&quot;&gt;GetProfileDataAsync&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;ProfileDataRequestContext context&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; claims = context.Subject.Claims.ToList();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        context.IssuedClaims = claims.ToList();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; Task &lt;span class=&quot;title&quot;&gt;IsActiveAsync&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;IsActiveContext context&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        context.IsActive = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;:hexoPostRenderEscape--&gt;</code></pre><ol start="2"><li>Startup类</li></ol><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Startup</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Startup</span>(<span class="params">IConfiguration configuration</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Configuration = configuration;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> IConfiguration Configuration &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// This method gets called by the runtime. Use this method to add services to the container.</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            services.Configure&lt;CookiePolicyOptions&gt;(options =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// This lambda determines whether user consent for non-essential cookies is needed for a given request.</span></span><br><span class="line">                options.CheckConsentNeeded = context =&gt; <span class="literal">true</span>;</span><br><span class="line">                options.MinimumSameSitePolicy = SameSiteMode.None;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//services.AddAuthentication(&quot;Bearer&quot;)</span></span><br><span class="line">            <span class="comment">//         .AddIdentityServerAuthentication(options =&gt;</span></span><br><span class="line">            <span class="comment">//         &#123;</span></span><br><span class="line">            <span class="comment">//             options.Authority = &quot;http://localhost:9500&quot;;//identity server 地址</span></span><br><span class="line">            <span class="comment">//             options.RequireHttpsMetadata = false;</span></span><br><span class="line">            <span class="comment">//         &#125;);</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">string</span> conStr = Configuration[<span class="string">&quot;connectionString&quot;</span>];</span><br><span class="line">            services.AddDbContext&lt;TestDbContext&gt;(options =&gt;</span><br><span class="line">            &#123;</span><br><span class="line">                options.UseMySql(conStr);</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment"><span class="doctag">///</span>依赖注入Service层</span></span><br><span class="line">            AddSigletons(services);</span><br><span class="line"></span><br><span class="line">            <span class="meta">#<span class="meta-keyword">region</span> ID4服务配置</span></span><br><span class="line">            <span class="keyword">var</span> id4Build = services.AddIdentityServer()</span><br><span class="line">                        .AddDeveloperSigningCredential()</span><br><span class="line">                        .AddInMemoryIdentityResources(Config.GetIdentityResources());</span><br><span class="line">            <span class="comment">//加载apiresource</span></span><br><span class="line">            id4Build.Services.AddTransient&lt;IResourceStore, TestReourceStore&gt;();</span><br><span class="line">            <span class="comment">//加载client</span></span><br><span class="line">            id4Build.Services.AddTransient&lt;IClientStore, TestClientStore&gt;();</span><br><span class="line">            <span class="comment">//登录验证</span></span><br><span class="line">            id4Build.Services.AddTransient&lt;IResourceOwnerPasswordValidator, TestResourceOwnerPasswordValidator&gt;();</span><br><span class="line">            <span class="comment">//加载profile。profile是用户信息</span></span><br><span class="line">            id4Build.Services.AddTransient&lt;IProfileService, ProfileService&gt;();</span><br><span class="line">            <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_2);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AddSigletons</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">var</span> assem = Assembly.Load(<span class="string">&quot;Test.Service&quot;</span>);</span><br><span class="line">            <span class="keyword">var</span> list = assem.GetTypes().Where(e =&gt; e.IsAbstract == <span class="literal">false</span> &amp;&amp; <span class="keyword">typeof</span>(ISignFac).IsAssignableFrom(e));</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">var</span> instanType <span class="keyword">in</span> list)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> instanType.GetInterfaces())</span><br><span class="line">                &#123;</span><br><span class="line">                    services.AddSingleton(item, instanType);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// This method gets called by the runtime. Use this method to configure the HTTP request pipeline.</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Configure</span>(<span class="params">IApplicationBuilder app, IHostingEnvironment env</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">if</span> (env.IsDevelopment())</span><br><span class="line">            &#123;</span><br><span class="line">                app.UseDeveloperExceptionPage();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                app.UseExceptionHandler(<span class="string">&quot;/Home/Error&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//插入id4中间件</span></span><br><span class="line">            app.UseIdentityServer();</span><br><span class="line">            <span class="comment">//app.UseAuthentication();</span></span><br><span class="line">            <span class="comment">//app.UseStaticFiles();</span></span><br><span class="line">            <span class="comment">//app.UseCookiePolicy();</span></span><br><span class="line">            <span class="comment">//app.UseMvc(routes =&gt;</span></span><br><span class="line">            <span class="comment">//&#123;</span></span><br><span class="line">            <span class="comment">//    routes.MapRoute(</span></span><br><span class="line">            <span class="comment">//        name: &quot;default&quot;,</span></span><br><span class="line">            <span class="comment">//        template: &quot;&#123;controller=Home&#125;/&#123;action=Index&#125;/&#123;id?&#125;&quot;);</span></span><br><span class="line">            <span class="comment">//&#125;);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>WebApplication3 API项目，修改Startup，并添加一个控制器，在方法上打上一个标签<figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Startup</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Startup</span>(<span class="params">IConfiguration configuration</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Configuration = configuration;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> IConfiguration Configuration &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// This method gets called by the runtime. Use this method to add services to the container.</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        services.AddAuthentication(<span class="string">&quot;Bearer&quot;</span>)</span><br><span class="line">                 .AddIdentityServerAuthentication(options =&gt;</span><br><span class="line">                 &#123;</span><br><span class="line">                     options.Authority = <span class="string">&quot;http://localhost:9500&quot;</span>;<span class="comment">//identity server 地址</span></span><br><span class="line">                     options.RequireHttpsMetadata = <span class="literal">false</span>;</span><br><span class="line">                 &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">string</span> conStr = Configuration[<span class="string">&quot;connectionString&quot;</span>];</span><br><span class="line">        services.AddDbContext&lt;TestDbContext&gt;(options =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            options.UseMySql(conStr);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span>依赖注入Service层</span></span><br><span class="line">        AddSigletons(services);</span><br><span class="line">        services.AddMvc().SetCompatibilityVersion(CompatibilityVersion.Version_2_2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AddSigletons</span>(<span class="params">IServiceCollection services</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">var</span> assem = Assembly.Load(<span class="string">&quot;Test.Service&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> list = assem.GetTypes().Where(e =&gt; e.IsAbstract == <span class="literal">false</span> &amp;&amp; <span class="keyword">typeof</span>(ISignFac).IsAssignableFrom(e));</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">var</span> instanType <span class="keyword">in</span> list)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> instanType.GetInterfaces())</span><br><span class="line">            &#123;</span><br><span class="line">                services.AddSingleton(item, instanType);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// This method gets called by the runtime. Use this method to configure the HTTP request pipeline.</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Configure</span>(<span class="params">IApplicationBuilder app, IHostingEnvironment env</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (env.IsDevelopment())</span><br><span class="line">        &#123;</span><br><span class="line">            app.UseDeveloperExceptionPage();</span><br><span class="line">        &#125;</span><br><span class="line">        app.UseAuthentication();</span><br><span class="line"></span><br><span class="line">        app.UseMvc();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/images/20190922144810.png" alt="控制器"></li></ol><h4 id="运行ConsoleApp1控制台项目，-生成数据库，添加几条数据"><a href="#运行ConsoleApp1控制台项目，-生成数据库，添加几条数据" class="headerlink" title="运行ConsoleApp1控制台项目， 生成数据库，添加几条数据"></a>运行ConsoleApp1控制台项目， 生成数据库，添加几条数据</h4><p><img src="/images/20190922141927.png" alt="运行ConsoleApp1控制台项目"></p><h2 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h2><ol><li><p>在 WebApplication1 目录下运行cmd命令 dotnet run ，启动IdentitServer4，端口是9500<br><img src="/images/20190922145030.png"><br><img src="/images/20190922145141.png"></p></li><li><p>运行项目 WebApplication3 ，端口是5000</p></li><li><p>当我们直接调用 WebApplication3 API中的方法时，发现返回状态码为 401<br><img src="/images/20190922145426.png"></p></li><li><p>请求Id4，复制返回的 access_token<br><img src="/images/20190922145606.png"></p></li><li><p>再请求WebApplication3 API，并在报文头带上token</p></li></ol><p><img src="/images/20190922145731.png"></p><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>&emsp;&emsp;个人认为我这种使用方式和其它使用方式最大的好处就是，可以写一个IdentityServer4的Client、APIResource增删改查，然后因为每次请求的时候都是从数据库读取数据的，如果数据被修改了，会立即生效。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;本人做微服务项目也有一段时间了，在微服务中让我感触颇深的就是这个IdentityServer4了，ID4（IdentityServer4的简称）中涉及的概念颇多，本文不谈概念（我怕读者没耐心看下去），在这分享下我个人的使用心得。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="框架" scheme="http://yoursite.com/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>如何使用Abstract类？抽象类的威力</title>
    <link href="http://yoursite.com/2019/09/21/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Abstract%E7%B1%BB%EF%BC%9F%E6%8A%BD%E8%B1%A1%E7%B1%BB%E7%9A%84%E5%A8%81%E5%8A%9B/"/>
    <id>http://yoursite.com/2019/09/21/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Abstract%E7%B1%BB%EF%BC%9F%E6%8A%BD%E8%B1%A1%E7%B1%BB%E7%9A%84%E5%A8%81%E5%8A%9B/</id>
    <published>2019-09-21T02:56:23.000Z</published>
    <updated>2020-07-30T08:20:28.201Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介："><a href="#简介：" class="headerlink" title="简介："></a>简介：</h2><p>&emsp;&emsp;今天我想谈谈如何使用抽象类，以及抽象类真正的威力。本文将结合具体业务来说明如何使用抽象类。</p><a id="more"></a><h2 id="业务简述："><a href="#业务简述：" class="headerlink" title="业务简述："></a>业务简述：</h2><p>&emsp;&emsp;本人之前是做PMS（物业管理系统），公司主要业务的是美国的租房业务。由于美国租房和中国租房在后台可能有点差别，本文不做叙述。下面我们直入主题。</p><p>&emsp;&emsp;用户点击租房之后，我们是要创建一个订单，而在创建订单的时候，需要做很多事，本文只做一个简化版的，避免偏离主题。当创建订单时，需要做以下几件事：</p><p>&emsp;&emsp;    1. Available 检查是否可用<br>&emsp;&emsp;    2. MinDay 检查 最小入住天数是否匹配<br>&emsp;&emsp;    3. Check in/Check out 检查入住时间和离开时间是否匹配<br>&emsp;&emsp;    4. quote 计算价格。</p><p>&emsp;&emsp;而针对前三中，只是判断该房可不可以租。而且有可能以后还会加入其它规则，如果把它们写在一起也是可以的，但不利于扩展。下面看下我如何使用abstract类来实现他的扩展性：</p><h2 id="正文："><a href="#正文：" class="headerlink" title="正文："></a>正文：</h2><ol><li><h4 id="第一步，创建以下类"><a href="#第一步，创建以下类" class="headerlink" title="第一步，创建以下类"></a>第一步，创建以下类</h4><ol><li><p><strong>创建类 OrderAddDTO.cs</strong>　</p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">OrderAddDTO</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 物业Id</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> Guid PropertyId &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 入住时间</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> DateTime CheckInDate &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 离开时间</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> DateTime CheckOutDate &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//<span class="doctag">TODO:</span>其它信息</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><strong>创建抽象类 PropertyValidAbstract.cs</strong></p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">PropertyValidAbstract</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">protected</span> PropertyValidAbstract _baseValid;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetNext</span>(<span class="params">PropertyValidAbstract BaseValid</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">this</span>._baseValid = BaseValid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span> ErrorMsg &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">bool</span> <span class="title">IsValid</span>(<span class="params">OrderAddDTO dto</span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><strong>创建Available 验证类：AvailableValid，并继承自PropertyValidAbstract</strong></p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AvailableValid</span> : <span class="title">PropertyValidAbstract</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="title">IsValid</span>(<span class="params">OrderAddDTO dto</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">//<span class="doctag">TODO:</span>取出该property(物业)的 Available</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//if (计算该物业在dto.CheckInDate-dto.CheckOutDate时间内是否可用)</span></span><br><span class="line">        <span class="comment">//&#123;</span></span><br><span class="line">        <span class="comment">//不可用，则对ErrorMsg赋值，并返回false；</span></span><br><span class="line">        <span class="comment">//<span class="doctag">TODO:</span>具体实现</span></span><br><span class="line">        <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果没有下一步验证了，则返回true</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>._baseValid == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果可用，则进入下一个验证</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>._baseValid.IsValid(dto);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><strong>创建MinDay 验证类MinDayValid.cs，并继承自PropertyValidAbstract</strong></p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MinDayValid</span> : <span class="title">PropertyValidAbstract</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="title">IsValid</span>(<span class="params">OrderAddDTO dto</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">//<span class="doctag">TODO:</span>取出该property(物业)的 MinDay规则</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//模拟minday规则，具体的minday比这个复杂多了</span></span><br><span class="line">        <span class="keyword">var</span> checkDays = (dto.CheckOutDate - dto.CheckInDate).Days + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (checkDays&lt;<span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ErrorMsg = <span class="string">&quot;stay at least 3 days&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果没有下一步验证了，则返回true</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>._baseValid == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果满足，则进入下一个验证</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>._baseValid.IsValid(dto);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>创建CheckIn/Out验证类：CheckInOutDateValid.cs，并继承自PropertyValidAbstract</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CheckInOutDateValid</span> : <span class="title">PropertyValidAbstract</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="title">IsValid</span>(<span class="params">OrderAddDTO dto</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//模拟checkin/checkout规则判断</span></span><br><span class="line">        DayOfWeek checkInWeek = dto.CheckInDate.DayOfWeek;</span><br><span class="line">        DayOfWeek checkOutWeek = dto.CheckOutDate.DayOfWeek;</span><br><span class="line">        <span class="keyword">if</span> (checkOutWeek!= DayOfWeek.Saturday||checkInWeek!= DayOfWeek.Tuesday)</span><br><span class="line">        &#123;</span><br><span class="line">            ErrorMsg = <span class="string">&quot;checkin/out Does not meet the&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果没有下一步验证了，则返回true</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>._baseValid==<span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>._baseValid.IsValid(dto);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p><strong>最后在创建一个验证配置类：ValidSettings.cs，并继承自PropertyValidAbstract</strong></p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ValidSettings</span>: <span class="title">PropertyValidAbstract</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="title">IsValid</span>(<span class="params">OrderAddDTO dto</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">//先进行AvailableValid</span></span><br><span class="line">    PropertyValidAbstract BaseValid = <span class="keyword">new</span> AvailableValid();</span><br><span class="line">        <span class="comment">//在验证MinDayValid</span></span><br><span class="line">        <span class="keyword">var</span> mindayvalid = <span class="keyword">new</span> MinDayValid();</span><br><span class="line">        BaseValid.SetNext(mindayvalid);</span><br><span class="line">        <span class="comment">//最后是CheckInOutDateValid</span></span><br><span class="line">        <span class="keyword">var</span> checkinOutvalid = <span class="keyword">new</span> CheckInOutDateValid();</span><br><span class="line">        mindayvalid.SetNext(checkinOutvalid);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> BaseValid.IsValid(dto);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li><li><h4 id="在控制台模拟："><a href="#在控制台模拟：" class="headerlink" title="在控制台模拟："></a>在控制台模拟：</h4> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span>这个dto，是从客户端传过来的，在这模拟下</span></span><br><span class="line">    OrderAddDTO dto = <span class="keyword">new</span> OrderAddDTO();</span><br><span class="line">    dto.CheckInDate = DateTime.Now;</span><br><span class="line">    dto.CheckOutDate = DateTime.Now.AddDays(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    PropertyValidAbstract baseValid = <span class="keyword">new</span> ValidSettings();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (baseValid.IsValid(dto)==<span class="literal">false</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(PropertyValidAbstract.ErrorMsg);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//<span class="doctag">TODO:</span>计算价格</span></span><br><span class="line">        Console.WriteLine(<span class="string">&quot;计算价格&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Console.ReadKey();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="运行结果："><a href="#运行结果：" class="headerlink" title="运行结果："></a>运行结果：</h4><ol><li><p>测试不满足minday规则<br><img src="/images/1525201-20190901113443986-628755385.png" alt="测试不满足minday规则"></p></li><li><p>测试都满足<br><img src="/images/1525201-20190901113725385-1451695077.png" alt="测试都满足"></p></li></ol></li></ol><ol start="4"><li><p>运行结果都没问题，这时候可能客户来需求，你再给我加个maxday（最大入住天数规则）。这时候我们可以这么做：</p><ol><li><p><strong>新建一个maxday验证类：MaxDayValid.cs，并继承自PropertyValidAbstract</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MaxDayValid</span> : <span class="title">PropertyValidAbstract</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="title">IsValid</span>(<span class="params">OrderAddDTO dto</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">//<span class="doctag">TODO:</span>取出该property(物业)的 MaxDay规则</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//模拟maxday规则，具体的maxday比这个复杂多了</span></span><br><span class="line">        <span class="keyword">var</span> checkDays = (dto.CheckOutDate - dto.CheckInDate).Days + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (checkDays &gt;<span class="number">300</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ErrorMsg = <span class="string">&quot;stay up to 300 days&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果没有下一步验证了，则返回true</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>._baseValid == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>._baseValid.IsValid(dto);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>修改ValidSettings.cs类</strong></p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ValidSettings</span>: <span class="title">PropertyValidAbstract</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="title">IsValid</span>(<span class="params">OrderAddDTO dto</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="comment">//先进行AvailableValid</span></span><br><span class="line">        PropertyValidAbstract BaseValid = <span class="keyword">new</span> AvailableValid();</span><br><span class="line">        <span class="comment">//在验证MinDayValid</span></span><br><span class="line">        <span class="keyword">var</span> mindayvalid = <span class="keyword">new</span> MinDayValid();</span><br><span class="line">        BaseValid.SetNext(mindayvalid);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//新增一个maxday</span></span><br><span class="line">        <span class="keyword">var</span> maxdayvalid = <span class="keyword">new</span> MaxDayValid();</span><br><span class="line">        mindayvalid.SetNext(maxdayvalid);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//最后是CheckInOutDateValid</span></span><br><span class="line">        <span class="keyword">var</span> checkinOutvalid = <span class="keyword">new</span> CheckInOutDateValid();</span><br><span class="line">        maxdayvalid.SetNext(checkinOutvalid);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> BaseValid.IsValid(dto);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>运行结果：<br><img src="/images/1525201-20190901114636396-1130030246.png" alt="运行结果："></p></li></ol></li></ol><h2 id="结束语："><a href="#结束语：" class="headerlink" title="结束语："></a>结束语：</h2><ul><li>希望我的文章能对你有所帮助，其实以上使用抽象类的例子也是一个设计模式的例子，好像是叫啥责任链吧。关于设计模式不能死记住，得做到“得其意，忘其形”。谢谢观看!</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介：&quot;&gt;&lt;a href=&quot;#简介：&quot; class=&quot;headerlink&quot; title=&quot;简介：&quot;&gt;&lt;/a&gt;简介：&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;今天我想谈谈如何使用抽象类，以及抽象类真正的威力。本文将结合具体业务来说明如何使用抽象类。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="设计模式" scheme="http://yoursite.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>解决.net Core中WebApi自动Model验证导致数据格式不能统一</title>
    <link href="http://yoursite.com/2019/09/19/%E8%A7%A3%E5%86%B3-net-Core%E4%B8%ADWebApi%E8%87%AA%E5%8A%A8Model%E9%AA%8C%E8%AF%81%E5%AF%BC%E8%87%B4%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F%E4%B8%8D%E8%83%BD%E7%BB%9F%E4%B8%80/"/>
    <id>http://yoursite.com/2019/09/19/%E8%A7%A3%E5%86%B3-net-Core%E4%B8%ADWebApi%E8%87%AA%E5%8A%A8Model%E9%AA%8C%E8%AF%81%E5%AF%BC%E8%87%B4%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F%E4%B8%8D%E8%83%BD%E7%BB%9F%E4%B8%80/</id>
    <published>2019-09-19T04:20:22.000Z</published>
    <updated>2020-07-30T08:20:05.307Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简言："><a href="#简言：" class="headerlink" title="简言："></a>简言：</h2><p>&emsp;&emsp;最近做项目用WebAPI Core时，想把返回模型验证错误信息和数据，统一弄成：{“errorMsg”:”xxx”,”Data”:”xxxx”}这种的格式。然而当我给我的实体类打上Required标签是，却发现：</p><a id="more"></a><p><img src="/images/1525201-20190110105859008-1862447114.png" alt="webapi自动验证生成的"></p><p>&emsp;&emsp;WebApi Core怎么自动进行model验证了。我想能不能自己像在MVC里面那样自己控制model验证：ModelState.IsValid。找了很多资料，都没有关于.net core web api的解决方法。最终我利用<strong>IResultFilter</strong>过滤器实现了我的需求。</p><h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h2><ol><li><p>首先第一步：建一个统一数据格式的类。我的接口还是用http状态码来判断请求是否成功（当然你也可以加上其它信息）：</p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">APIResult</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">string</span> ErrorMsg &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">object</span> Data &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>然后再建一个继承自IResultFilter的类：</p></li></ol><pre><code>&lt;!--hexoPostRenderEscape:&lt;figure class=&quot;highlight c#&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;APIResultFilter&lt;/span&gt; : &lt;span class=&quot;title&quot;&gt;IResultFilter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;OnResultExecuted&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;ResultExecutedContext context&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;OnResultExecuting&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;ResultExecutingContext context&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//因为webapi core自动验证Model，返回的类型是：BadRequestObjectResult。我是通过反射GetType()查看的。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (context.Result &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; BadRequestObjectResult)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            BadRequestObjectResult res = (BadRequestObjectResult)context.Result;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            SerializableError obj = res.Value &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; SerializableError;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            StringBuilder sb = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; StringBuilder();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;foreach&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; item &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; obj)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; vals = item.Value &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;[];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (vals != &lt;span class=&quot;literal&quot;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    sb.AppendLine(vals[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            context.Result = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; JsonResult(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; APIResult &amp;#123; ErrorMsg = sb.ToString() &amp;#125;) &amp;#123; StatusCode=&lt;span class=&quot;number&quot;&gt;400&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;:hexoPostRenderEscape--&gt;</code></pre><ol start="3"><li><p>最后一步就是将Filter添加到进去了：</p> <figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ConfigureServices</span>(<span class="params">IServiceCollection services</span>)</span>&#123;</span><br><span class="line">    services.AddMvc(</span><br><span class="line">        options=&gt;&#123;</span><br><span class="line">            options.Filters.Add(<span class="keyword">new</span> APIResultFilter());</span><br><span class="line">        &#125;</span><br><span class="line">    ).SetCompatibilityVersion(CompatibilityVersion.Version_2_1)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>测试结果我就不丢上来了，手动偷懒0-0</p><p>—————————————————-谢谢观看——————————————</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简言：&quot;&gt;&lt;a href=&quot;#简言：&quot; class=&quot;headerlink&quot; title=&quot;简言：&quot;&gt;&lt;/a&gt;简言：&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;最近做项目用WebAPI Core时，想把返回模型验证错误信息和数据，统一弄成：{“errorMsg”:”xxx”,”Data”:”xxxx”}这种的格式。然而当我给我的实体类打上Required标签是，却发现：&lt;/p&gt;
    
    </summary>
    
    
    
      <category term=".Net Core" scheme="http://yoursite.com/tags/Net-Core/"/>
    
  </entry>
  
</feed>
